# Interop Settings Template
# This file documents all available configuration options for Interop.
# Uncomment and edit the fields you wish to configure.

# =====================
# GLOBAL SETTINGS
# =====================

# log_level = "warning"         # Options: error, warning, verbose
# executable_search_paths = [   # Additional directories to search for executables
#   "~/.local/bin",
#   "~/bin"
# ]
# mcp_port = 8081               # Default port for the main MCP server

# =====================
# MCP SERVER CONFIGURATION
# =====================

#[mcp_servers.example]
#name = "example"               # Unique name for this MCP server (must match the key)
#description = "Example domain-specific server"
#port = 8082                    # Port for this MCP server

# =====================
# MCP TOOLS & GLOBAL COMMANDS
# =====================
# Global commands (commands not bound to any project) automatically receive
# an optional "project_path" parameter when exposed as MCP tools.
# This allows AI assistants to specify a working directory for the command,
# making global commands work like project-bound commands when needed.
#
# Example: A global "build" command can be run in any project directory by
# providing the project_path parameter to the MCP tool.

# =====================
# PROJECT DEFINITIONS
# =====================

#[projects.sample_project]
#path = "~/projects/sample"     # Path to the project directory (must be inside $HOME)
#description = "Sample project for demonstration"
#commands = [                   # List of commands for this project (with optional aliases)
#  { command_name = "build", alias = "b" },
#  { command_name = "test" }
#]

# =====================
# COMMAND DEFINITIONS
# =====================

#[commands.build]
#cmd = "go build ./..."         # The shell command or executable to run
#description = "Build the project"
#is_enabled = true              # Enable or disable this command
#is_executable = false          # If true, run as an executable; if false, run in shell
#mcp = "example"                # (Optional) Assign this command to a specific MCP server
#arguments = [                  # (Optional) List of arguments for this command
#  { name = "output_file", type = "string", description = "Output file name", required = true },
#  { name = "package", type = "string", description = "Package to build", default = "./cmd/app" }
#]

#[commands.test]
#cmd = "go test ./..."
#description = "Run tests"
#is_enabled = true
#is_executable = false

#[commands.deploy]
#cmd = "deploy.sh"
#description = "Deploy the project"
#is_enabled = true
#is_executable = true
#mcp = "example"

# =====================
# COMMAND ARGUMENT TYPES
# =====================
# type: string | number | bool
# Example:
# arguments = [
#   { name = "type", type = "string", description = "Component type", required = true },
#   { name = "force", type = "bool", description = "Overwrite if exists", default = false }
# ]

# =====================
# END OF TEMPLATE
# =====================
